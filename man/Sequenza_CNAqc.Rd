% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Sequenza_CNAqc.R
\name{Sequenza_CNAqc}
\alias{Sequenza_CNAqc}
\title{CNAqc-based purity-optimisation pipeline for Sequenza CNA calling.}
\usage{
Sequenza_CNAqc(
  sample_id,
  seqz_file,
  dataframe = NULL,
  sex,
  cellularity = c(0.05, 1),
  ploidy = c(1.8, 5.4),
  max_runs = 3,
  reference = "GRCh38",
  normalization.method = "median",
  window = 1e+05,
  gamma = 280,
  kmin = 300,
  min.reads.baf = 50,
  min.reads = 50,
  min.reads.normal = 15,
  max.mut.types = 1,
  delta_cellularity = 0.05,
  delta_ploidy = 0.25,
  n_grid_cells = 10,
  verbose = FALSE
)
}
\arguments{
\item{sample_id}{The id of the sample.}

\item{...}{Optional parameters passed to the \code{analyse_peaks} function
by CNAqc. Tune these to change error tolerance or karyotypes to use for QC.}
}
\value{
Nothing. If the pipeline could fit a correct purity value then
a \code{final} folder links to the final Sequenza results. Otherwise the best
solution - not final - is reported to screen. If the solution in general can
not be found error logs and screen outputs suggest the user how to check,
manually, how to improve the fits.
}
\description{
This pipeline implements optimised allele-specific
copy number calling with Sequenza and CNAqc, optimising purity estimated
from data, and allele-specific segments.

Requirements:

1. (Prerequisites) Run Sequenza utils steps outside R
   a. Process a FASTA file to produce a GC Wiggle track file
   b. Process BAM and Wiggle files to produce a seqz file:
   c. Post-process by binning the original seqz file:

   Instructions to customize these steps are available at
   \url{https://cran.r-project.org/web/packages/sequenza/vignettes/sequenza.html}

2. Then this pipeline (\code{Sequenza_CNAqc}) will optimize CNA calling and purity
estiamtion using peak detection from CNAqc. A maximum number of attempts
\code{max_runs} is attempted, starting from a broad set of initial conditions
for purity (5% to 100%). Further refinements steps will restrict the Sequenza purity
range based on the score computed by \code{analyse_peaks}, which determines a purity
gradient. Each run is saved in a folder named \code{run-1}, \code{run-2}, etc.
If at any step a \code{PASS} is obtained via \code{analyse_peaks},
the pipeline stops and a symbolic link (\code{final}) pointing to the correct
Sequenza solution is created. If no run reaches a \code{PASS}  status, the
\code{final} folder is never created but the best reported solution is print
out to screen. Every CNAqc output object containing somatic mutations called by
Sequenza and allele-specific CNAs is available in the specific running folders.
}
\note{
Ploidy is kept constant by this pipeline, using a possible range of ploidy values
that are specified by the user. If at any time a purity proposal made by CNAqc leads
to inconsistent values (i.e., outside $[0,1]$) the pipeline stops prompting to the user
to adjust manually the range of \code{ploidy}.
}
\examples{
\donotrun{

# Make some example based on https://cran.r-project.org/web/packages/sequenza/vignettes/sequenza.html
install.packages("sequenza")

# Outside R
# pip install sequenza-utils

# Process a FASTA file to produce a GC Wiggle track file
# sequenza−utils gc_wiggle −w 50 --fasta hg19.fa -o hg19.gc50Base.wig.gz

# Process BAM and Wiggle files to produce a seqz file
# sequenza−utils bam2seqz -n normal.bam -t tumor.bam --fasta hg19.fa \
# -gc hg19.gc50Base.wig.gz -o out.seqz.gz

# Post-process by binning the original seqz file:
sequenza−utils seqz_binning --seqz out.seqz.gz -w 50 -o out small.seqz.gz

# Run this pipeline
Sequenza_CNAqc(
   sample_id = 'tumour',
   seqz_file = 'small.seqz.gz', # Binned file
   sex = "F" # if female
)
}
}
