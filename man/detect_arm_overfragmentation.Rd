% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/detect_arm_overfragmentation.R
\name{detect_arm_overfragmentation}
\alias{detect_arm_overfragmentation}
\title{Determines arm-level over-fragmentation patterns.}
\usage{
detect_arm_overfragmentation(
  x,
  alpha = 0.01,
  genome_percentage_cutoff = 0.2,
  minimum_segments_for_testing = 10
)
}
\arguments{
\item{x}{A CNAqc object.}

\item{alpha}{Confidence level for the tests, for instance \code{0.05}.}

\item{genome_percentage_cutoff}{Segments are considered long or short depending on whether
they are longer (in basepairs) than \code{genome_percentage_cutoff * L} bases, where \code{L}
is the arm length for the reference genome. Default is \code{0.2} (twenty percent).}

\item{minimum_segments_for_testing}{Smallest number of segments required to actually test
a certain arm Default is \code{10} segments. This number influences the correction for mulitple
hypothesis testing.}
}
\value{
A CNAqc objectwith the results.
}
\description{
The fragmentation of a chromosome arm is assessed with a statistical test based
on counting the size of the copy number segments mapping to the arm. This analysis
works only at the level of clonal CNAs.

CNAqc counts, for every arm with lenght $L$ nucleotides:

- the number of mapped CNA segments shorter than a percentage of $L$;
- the number of mapped CNA segments longer than a percentage of $L$.

A one-sided Binomial test is used to compute a p-value. In this way the test accounts
for the difference in lenghts of the chromsome arms; a p-value per arm is reported and
adjusted for multiple hyoptheses (Bonferroni).
}
\examples{
data('example_dataset_CNAqc')
x = init(mutations = example_dataset_CNAqc$mutations, cna = example_dataset_CNAqc$cna, purity = example_dataset_CNAqc$purity)

x = detect_arm_overfragmentation(x)

# Report to console
print(x)
}
