% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analyze_peaks.R
\name{analyze_peaks}
\alias{analyze_peaks}
\title{Analyze calls by peak detection.}
\usage{
analyze_peaks(
  x,
  karyotypes = c("1:0", "1:1", "2:0", "2:1", "2:2"),
  min_karyotype_size = 0,
  min_absolute_karyotype_mutations = 100,
  p_binsize_peaks = 0.005,
  matching_epsilon = NULL,
  purity_error = 0.05,
  VAF_tolerance = 0.015,
  n_bootstrap = 1,
  kernel_adjust = 1,
  matching_strategy = "closest",
  KDE = TRUE,
  starting_state_subclonal_evolution = "1:1"
)
}
\arguments{
\item{x}{An object of class \code{cnaqc}, created by the \code{init} function.}

\item{karyotypes}{The list of karyotypes to test. By default LOH regions (A, AA),
diploid regions (AB), and amplification regions (AAB, AABB). These correspond to
\code{'1:0', '1:1', '2:1', '2:0', '2:2'} in "Major:minor" notation.}

\item{min_karyotype_size}{Karyotypes are subset by their size (normalized for
the number of input mutations). Karyotypes smaller than this value are removed
from analysis.}

\item{min_absolute_karyotype_mutations}{As \code{min_karyotype_size} this imposes a
minimum number of mutations on a karyotype to be analysed (in absolute number of
mutations). Karyotypes smaller than this value are removed from analysis.}

\item{p_binsize_peaks}{Peaks detected will be filtered if, in a peak, we map
less than \code{p_binsize_peaks * N} mutations. The value \code{N} is obtained
couting all mutations that map in all peaks.#'}

\item{matching_epsilon}{Deprecated parameter.}

\item{purity_error}{Purity error tolerance to determine QC results. This can be
set automatically using function \code{auto_tolerance}}

\item{VAF_tolerance}{A tolerance in comparing bands overlaps - this is applied
to the raw VAF values.}

\item{n_bootstrap}{Number of times peak detection is bootstrapped (this helps sometimes
finding peaks that might be visually observable but fail to be detected by the underlying
peak detection heuristic). The default of this parameter is 1, meaning that no bootstrap
is performed.}

\item{kernel_adjust}{KDE adjust density parameter; see \code{density}. A Gaussian
kernel is used (\code{kernel = 'gaussian'}).}

\item{matching_strategy}{If \code{"closest"}, the closest peak will be used to
match the expected peak. If \code{"rightmost"}, peaks are matched prioritizing
right to left peaks (the higher get matched first); this strategy is more correct
in principle but works only if there are no spurious peaks in the estimated
density. By defaule the first strategy is used.}

\item{KDE}{Deprecated parameter (unused).}

\item{starting_state_subclonal_evolution}{Starting state to determine linear versus
branching evolutionary model, for sublonal CNA QC.}
}
\value{
An object of class \code{cnaqc}, modified to hold the results from this analysis.
See the vignette to see how to extract and plot the results.
}
\description{
This function carries out a peak-detection
analysis to determine QC for clonal simple CNAs, clonal complex CNAs and
subclonal CNAs.

Several scores are produced and returned; functions to visualize results
are also available (see the tool website for example usages).
}
\examples{
data('example_dataset_CNAqc', package = 'CNAqc')
x = init(example_dataset_CNAqc$snvs, example_dataset_CNAqc$cna,example_dataset_CNAqc$purity)

x = analyze_peaks(x)
print(x)

print(x$peaks_analysis)

x = analyze_peaks(x, matching_strategy = "rightmost")
print(x)
}
