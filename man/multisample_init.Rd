% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_multisample.R
\name{multisample_init}
\alias{multisample_init}
\title{Create multisample segmentation}
\usage{
multisample_init(
  cnaqc_objs,
  QC_filter = TRUE,
  keep_original = TRUE,
  discard_private = FALSE
)
}
\arguments{
\item{cnaqc_objs}{named list of CNAqc objects, one per sample (each element must include at 
least "mutations", "cna", "reference" and "purity"). Names of the list must correspond to sample_id.}

\item{QC_filter}{logical. Indicates whether to filter or not for QC-passing mutations (NB: must have performed the peak analysis before). 
Default is \code{TRUE}.}

\item{keep_original}{logical. Indicates whether to keep or not original CNAqc objects, default is \code{TRUE}}

\item{discard_private}{logical. Indicates whether to keep or not mutations falling on private segments, default is \code{FALSE}.}
}
\value{
a mCNAqc object, structured as follows: 
- `cnaqc_obj_new_segmentation` = list of CNAqc objects for all the samples created using the new segmentation;
- `original_cnaqc_objc` = original CNAqc object, only if the argument \code{keep_original} is set to TRUE;
- `original_additional_info` = additional information from the original CNAqc objects, such peaks analysis results of CCF estimation. Only if the argument \code{keep_original} is set to FALSE;
- `m_cnaqc_stats` = information related to number of mutations and segments before and after the creationn of the mCNAqc object.
}
\description{
Creates a mCNAqc object starting from a named list of CNAqc objects on which the quality control has already been 
performed individually (ie: multiple samples coming from the same patient). Breakpoints from the original CNAqc objects are
used to define new breakpoints (and then segments) common across all the samples; in the resulting object, the mutations are 
remapped on the newly defined segments. 
The new m_CNAqc object can be used to perform new a quality control analysis with the different segmentation.
}
\examples{
\dontrun{multisamples = CNAqc::multisample_init(cnaqc_objs = CNAqc_samples, 
                 QC_filter = TRUE, 
                 keep_original = FALSE, 
                 discard_private = FALSE)

multisamples}
}
