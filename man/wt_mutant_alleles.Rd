% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/maf.R
\name{wt_mutant_alleles}
\alias{wt_mutant_alleles}
\title{Compute WT and mutant alleles per gene}
\usage{
wt_mutant_alleles(x, gene_column = "VEP.SYMBOL")
}
\arguments{
\item{x}{A CNAqc object.}

\item{gene_column}{The gene column where the human-redable gene name should
be. By default it is `"VEP.SYMBOL"` assuming that this function gets run on
a dataset where VEP annotations have been augmented.}
}
\value{
an unpdated CNAqc object.
}
\description{
This function works on a CNAqc object with annotated driver mutations and
a column (in mutation data) reporting gene symbols in human-readable format
(e.g., TP53, KRAS, etc).

This function retains only driver genes, maps them to clonal copy number
segments, and then computes mutation phasing by VAFs. This phasing is the
same operation carried out to compute CCFs in CNAqc; despite being an
approximation to the canonical SNP-based phasing, this operation can easily
determine from VAFs how many genome copies carry out a somatic mutation.

With the complete information altogether (major/minor allele copies and mutation
multiplicity), it is straightforward to identify, for instance, driver genes
that are mutated with a matched LOH status (e.g., complete inactivation of
suppressor genes, or amplification of oncogenic mutations).
}
\examples{
# Example with a CNAqc input object, and MAF annotations
if(FALSE)
{
   # Create your CNAqc object (omissis here) from an original "file.vcf"
   x = init(mutations = ..., cna = ..., purity = ...)

   # Offline, create your MAF annotations as file "file_vcf.maf" from "file.vcf"
   # vcf2maf file.vcf .... file_vcf.maf

   # Import into R/CNAqc
   x = augment_with_maf(x, maf = "file_vcf.maf")

   # check they are in (there should be many columns with "MAF." prefix)
   x \%>\% Mutations \%>\% colnames

   # With MAF-imported that is the target column
   wt_mutant_alleles(x, gene_column = 'MAF.Hugo_Symbol')
}
}
\seealso{
function \code{\link{augment_with_vep}} to add VEP annotations to
a CNAqc object.
}
